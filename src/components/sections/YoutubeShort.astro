---
import Icon from "../ui/Icon.astro";

interface Props {
	videoId: string;
	thumbnailUrl: string;
	title: string;
}

const { videoId, thumbnailUrl, title } = Astro.props;
---

<youtube-short
	class="rounded-2xl bg-cover h-[570px] w-80 snap-center bg-black relative shrink-0 cursor-pointer"
	videoid={videoId}
	thumbnailurl={thumbnailUrl}
	data-title={title}
	aria-label="Reproducir video"
	role="button"
	tabindex="0">
	<div
		class="p-4 pl-[18px] bg-white rounded-full absolute bottom-6 right-6 hover:scale-110 transition-transform"
		id=`Id${videoId}`
		title={title}>
		<Icon name="play" class="text-primary" />
	</div>
</youtube-short>

<script>
	class YoutubeShort extends HTMLElement {
		videoId?: string;

		connectedCallback() {
			const thumbnailUrl = this.getAttribute("thumbnailurl");
			this.videoId = this.getAttribute("videoid")!;

			this.style.backgroundImage = `url(${thumbnailUrl})`;

			this.addEventListener("click", this.activateVideo);
			this.addEventListener("keydown", this.handleKeyPress);
		}

		activateVideo() {
			this.style.backgroundImage = "unset";

			this.querySelector(`#Id${this.videoId}`)?.remove();

			const iframeEl = this.createIframe();
			this.append(iframeEl);
			iframeEl.focus();

			this.unMutePlayerByDefault();
		}

		handleKeyPress(event: KeyboardEvent) {
			if (event.code === "Enter" || event.code === "Space") {
				this.activateVideo();
			}
		}

		createIframe() {
			const iframeEl = document.createElement("iframe");
			iframeEl.width = "320";
			iframeEl.height = "570";
			iframeEl.classList.add(
				"rounded-2xl",
				"w-full",
				"h-full",
				"snap-center"
			);
			iframeEl.title = this.getAttribute("data-title")!;
			iframeEl.allow =
				"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture";
			iframeEl.allowFullscreen = true;
			iframeEl.src = `https://www.youtube.com/embed/${this.videoId}?autoplay=1`;

			return iframeEl;
		}

		unMutePlayerByDefault() {
			const iframeWindow = this.querySelector("iframe")!.contentWindow;
			// YouTube embeds don't typically allow postMessage unmuting, but you could control the volume later through the YouTube Player API
		}
	}

	customElements.define("youtube-short", YoutubeShort);
</script>
