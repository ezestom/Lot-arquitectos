---
import Container from "../Container.astro";
import CardParallax from "../CardParallax/CardPallax.jsx";
import declaraciones from "../../img/declaraciones.webp";

const cardSolution = [
	{
		title1: " Monitoreo por establecimiento",
		title2: " Monitoreo por establecimiento, para un control completo de las operaciones, recursos y rendimientos en cada campo.",
		title3: "Asimismo, localiza de manera sencilla los impactos georeferenciados, lo que agiliza la respuesta para ajustar las soluciones y estrategias con mayor precisión. Incorpora el análisis de suelos para obtener indicadores locales confiables.",
		img: declaraciones.src,
		gradient:
			"bg-gradient-to-r from-[#e6f6ee] to-[#8bcfad] text-ij-green md:h-row-span-1 md:h-full",
		colorTitle: "text-[#0E8247]",
		imageClass:
			"p-4 sm:p-8 md:p-4 lg:p-8 !pb-0  opacity-50 translate-y-10 group-hover:opacity-100 scale-125",
	},
];
---

<div id="solution" class="pt-10 lg:pt-32">
	<Container>
		<section class="flex flex-wrap justify-between">
			<div class="w-full md:w-1/2">
				<h2 class="text-3xl font-bold text-gray-600 md:text-4xl">
					Solución
				</h2>
				<p
					class="my-2 text-gray-600 dark:text-gray-300 text-md md:text-xl font-semibold">
					Gestionar la sustentabilidad nunca fue tan fácil.
				</p>
				<p class="my-2 text-gray-600 dark:text-gray-300">
					Alcanza tus objetivos sin complicaciones. Recopila y analiza
					tus datos de forma automática, y sencilla.
				</p>
				<div
					class="divide-y space-y-4 divide-gray-100 dark:divide-gray-800">
					<div class="mt-8 flex gap-4 md:items-start">
						<div class="flex gap-4 text-green-600">✓</div>
						<div class="w-5/6">
							<h3
								class="font-semibold text-lg text-gray-700 dark:text-indigo-300">
								Monitoreo por establecimiento
							</h3>
							<p class="text-gray-500 dark:text-gray-400">
								Asegura un control completo de las operaciones,
								recursos y rendimientos en cada campo. Asimismo,
								localiza de manera sencilla los impactos
								georeferenciados, lo que agiliza la respuesta
								para ajustar las soluciones y estrategias con
								mayor precisión. Incorpora el análisis de suelos
								para obtener indicadores locales confiables.
							</p>
						</div>
					</div>
					<div class="pt-4 flex gap-4 md:items-start">
						<div class="flex gap-4 text-green-600">✓</div>
						<div class="w-5/6">
							<h3
								class="font-semibold text-lg text-gray-700 dark:text-teal-300">
								Monitoreo por producto
							</h3>
							<p class="text-gray-500 dark:text-gray-400">
								Adquiere trazabilidad del uso de recursos y
								generación de emisiones asociadas a tus
								actividades. Identifica oportunidades de mejora
								de eficiencia y sustentabilidad.
							</p>
						</div>
					</div>
				</div>
			</div>

			<aside class="w-full md:max-w-[50%]">
				{
					cardSolution.map((card) => (
						<button
							class={`group flex flex-col rounded-3xl pt-4 px-4 md:px-12 lg:px-15 lg:pt-6 xl:pt-10   w-full transition-all  overflow-hidden ${card.gradient} open-dialog`}>
							<p class="my-2 text-gray-900 text-xl font-bold py-2 text-start">
								{card.title1}
							</p>
							<div class="flex justify-center mt-auto w-full h-auto md:mb-0">
								<img
									class="w-full h-full scale-100 duration-300 transition group-hover:-translate-y-0  group-hover:scale-105 group-hover:z-10 object-contain object-bottom"
									class:list={card.imageClass}
									src={card.img}
									alt="cactus image"
									id="declaration"
									transition:name="fade-in"
								/>
							</div>
						</button>
					))
				}
				<dialog
					class="dialog w-full h-full m-auto overflow-hidden bg-transparent animate-fade-in delay-75 duration-75">
					{
						cardSolution.map((card) => (
							<aside
								class={`group flex flex-col items-start justify-start text-start rounded-3xl p-4 md:p-8  h-full w-full transition-all  ${card.gradient} gap-4 relative max-w-[75ch] max-h-[95%] shadow-2xl shadow-gray-600/10 m-auto`}>
								<button class="h-8 w-8 absolute top-4 right-4 text-gray-900 hover:scale-105 transition close-dialog z-20">
									<svg
										xmlns="http://www.w3.org/2000/svg"
										fill="none"
										viewBox="0 0 24 24"
										stroke="currentColor">
										<path
											stroke-linecap="round"
											stroke-linejoin="round"
											stroke-width="2"
											d="M6 18L18 6M6 6l12 12"
										/>
									</svg>
								</button>
								<div class="z-10 backdrop-blur bg-white/10 rounded-3xl p-6 md:p-8 ">
									<h2 class="text-base md:text-xl font-semibold">
										{card.title1}
									</h2>
									<p
										class={`text-sm md:text-base py-4  text-pretty ${card.colorTitle}`}>
										{card.title2}
									</p>
									<p class="text-sm md:text-base  text-pretty ">
										{card.title3}
									</p>
								</div>
								<img
									src={card.img}
									alt=""
									class="absolute bottom-10 object-contain object-bottom w-screen h-1/2"
									transition:name="fade-in"
								/>
							</aside>
						))
					}
				</dialog>
			</aside>
			<!-- <CardParallax client:visible /> -->

			<!-- aqui -->
		</section>
	</Container>
</div>

<script is:inline>
	document.addEventListener("DOMContentLoaded", () => {
		const dialog = document.querySelector("dialog");
		const openButtons = document.querySelector(".open-dialog"); // Botones que abren el diálogo
		const closeButton = dialog.querySelector(".close-dialog"); // Botón dentro del diálogo para cerrarlo
		const declaration = document.getElementById("declaration");

		openButtons.addEventListener("click", () => {
			dialog.showModal();
			document.body.style.overflow = "hidden";
			declaration.style.display = "none";
		});
		closeButton.addEventListener("click", () => {
			dialog.close();
			document.body.style.overflow = "auto";
			declaration.style.display = "block";
		});
	});
</script>

<style>
	p {
		font-size: 1rem;
		color: #333;
	}
	#declaration {
		overflow: hidden;
	}
</style>
